openapi: 3.0.0
info:
  title: Support Desk API
  description: Backend api for support desk app
  version: 0.0.1

servers:
  - url: http://localhost:5001/api
    description: Localhost
  - url: https://tosin-supportdesk.herokuapp.com/api
    description: Production version

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /users:
    post:
      tags:
        - Users
      summary: Add a new user.

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string

      responses:
        "200":
          description: returns created user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  token:
                    type: string
        "400":
          description: Invalid user data
  /users/login:
    post:
      tags:
        - Users
      summary: Login in a user
      required: true

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string

      responses:
        "200":
          description: returns created user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  token:
                    type: string
        "400":
          description: Invalid credentials
  /users/me:
    get:
      tags:
        - Users
      summary: Get current User
      security:
        - BearerAuth: []
      responses:
        "200":
          description: returns created user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
                  name:
                    type: string
  /tickets:
    get:
      tags:
        - Tickets
      summary: Get All Tickets
      security:
        - BearerAuth: []
      responses:
        "200":
          description: returns created ticket.
        "401":
          description: Ticket not Found
    post:
      tags:
        - Tickets
      summary: Create new ticket
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: string
                description:
                  type: string
      responses:
        "200":
          description: returns created tickets.
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    type: string
                  description:
                    type: string
                  user:
                    type: string
                  status:
                    type: string

        "401":
          description: Ticket not found

  /tickets/{id}:
    get:
      tags:
        - Tickets
      summary: Get Single Ticket
      security:
        - BearerAuth: []
      responses:
        "200":
          description: OK.
        "401":
          description: Ticket not Found
    put:
      tags:
        - Tickets
      summary: Update Single Ticket
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ticket Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK.
        "401":
          description: User not Found
        "404":
          description: Ticket not found

    delete:
      tags:
        - Tickets
      summary: Delete Single Ticket
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ticket Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK.
        "401":
          description: User not Found
        "404":
          description: Ticket not found
